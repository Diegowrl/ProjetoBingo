@model ProjetoBingo.Entity.Bingo

@{
    Layout = null;
    
}


<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/scripts/jquery-3.0.0.min.js"></script>
<script src="~/scripts/bootstrap.min.js"></script>


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Bingo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     
            <div class="form-group">
                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" >
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control input" } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataHora, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" >
                    @Html.EditorFor(model => model.DataHora, new { htmlAttributes = new { @class = "form-control input"} })
                    @Html.ValidationMessageFor(model => model.DataHora, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model != null)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DscCancelamenrto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DscCancelamenrto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DscCancelamenrto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataCancelamento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataCancelamento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataCancelamento, "", new { @class = "text-danger" })
                    </div>
                </div>
            }



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" onclick="validar(this);" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



    <script>
        function validar(e) {
            e.preventDefault();
            var inputs = document.getElementsByClassName("input");

            if (inputs[0] == "" || inputs[0] == "") {
                alert("Eror 404");
            }
            else {
                e.submit();
            }
        }
    </script>


</body>
</html>
